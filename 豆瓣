# -*- codeing = utf-8 -*-
# @Time : 2021/3/22 11:49 下午
# @Author : 史胖星星
# @File ：  db.PY
# @Software:PyCharm


from bs4 import BeautifulSoup  #网页解析
import re   #正则表达式，进行文字交配
import urllib.request,urllib.error   #制定URL
import xlwt   #excel操作
import sqlite3  #进行SQL数据库操作
import ssl

ssl._create_default_https_context = ssl._create_unverified_context





def main():
    baesurl = "https://movie.douban.com/top250?start=0"
    #爬取网页
    datalist = getdata(baesurl)
    #savepath = "豆瓣电影.xls"
    dbpath = "text.db"
    # 3保存数据
    #savedata(datalist,savepath)
    savedata2db(datalist,dbpath)

    #askURL("https://movie.douban.com/top250?start=")

findlink = re.compile(r'<a href="(.*?)">')  #懒惰模式
#电影图片
findimgsrc = re.compile(r'<img.*src="(.*?)"',re.S)
#电影名字
findtitle = re.compile(r'<span class="title">(.*)</span>')
#影片评分
findrating = re.compile(r'<span class="rating_num" property="v:average">(.*)</span>')
#评价人数
findjudge = re.compile(r'<span>(\d*)人评价</span>')

findinq = re.compile(r'<span class="inq">(.*)</span>')

findbd = re.compile(r'<p class="">(.*?)</p>',re.S)



#爬取网页
def getdata(baesurl):
    datalist = []
#分页
    for i in range(0,10):  #调用获取页面信息的函数
        url = baesurl + str(i*25)
        html = askURL(url)

#解析需要的元素对象下的信息
        soup = BeautifulSoup(html,"html.parser")
        for item in soup.find_all('div',class_="item"):   #查找符合要求的
            #print(item)
            data = []  # 一部电影的信息
            item = str(item)


            link = re.findall(findlink,item)[0]
            data.append(link)

            imgsrc = re.findall(findimgsrc,item)[0]
            data.append(imgsrc)

            title = re.findall(findtitle,item)
            if(len(title) == 2):
                otitle = title[0]
                data.append(otitle)
                otitle = title[1].replace("/","")
                data.append(otitle)
            else:
                data.append(title[0])
                data.append(' ')

            rating = re.findall(findrating,item)[0]
            data.append(rating)

            judge = re.findall(findjudge,item)[0]
            data.append(judge)

            inq = re.findall(findinq,item)
            if len(inq) != 0:
                inq = inq[0].replace("。","")
                data.append(inq)
            else:
                data.append(" ")

            bd = re.findall(findbd,item)[0]
            bd = re.sub('<br(\s+?)/>(\s+?)'," ",bd)
            bd = re.sub('/'," ",bd)
            data.append(bd.strip())

            datalist.append(data)

    #print(datalist)
    return datalist

#指定一个URL网页内容
def askURL(url):
    head = { 'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36'
  }
    request = urllib.request.Request(url,headers=head)
    html = ""
    try:
        response = urllib.request.urlopen(request)
        html = response.read().decode("utf-8")
        #print(html)



    except urllib.error.URLError as e:
        if hasattr(e,"code"):
            print(e.code)
        if hasattr(e,"reason"):
            print(e.reason)
    return html

#3保存数据
def savedata(datalist,savepath):
    print("save....")
    book = xlwt.Workbook(encoding="utf-8",style_compression=0)
    sheet = book.add_sheet('豆瓣电影.xls',cell_overwrite_ok=True)#cell_overwiite_ok=True
    col = ("电影详情","图片链接","影片中文名","影片外国名","评分","评论数","概况","相关信息")
    for i in range(0,8):
        sheet.write(0,i,col[i])
    for i in range(0,250):
        print("第%d条"%(i+1))
        data = datalist[i]
        for j in range(8,8):
            sheet.write(i+1,j,data[j])

    book.save(savepath)

def savedata2db(datalist,dbpath):
    init_db(dbpath)
    conn = sqlite3.connect(dbpath)
    cur = conn.cursor()


    for data in datalist:
        for index in range(len(data)):
            if index == 5 or index == 6:
                continue
            data[index] = '"'+data[index]+'"'
        sql = '''
                insert into text250(
                info_link,pic_link,cname,ename,score,reted,instroduction,info)
                values(%s)'''%",".join(data)
        #print(sql)
        cur.execute(sql)
        conn.commit()
    cur.close()
    conn.close()



def init_db(dbpath):
    sql = '''
        create table text250
        (
        id integer primary key autoincrement,
        info_link text,
        pic_link text,
        cname varchar ,
        ename varchar ,
        score numeric ,
        rated numeric ,
        instroduction text ,
        info text
        )
    '''
    conn = sqlite3.connect(dbpath)
    cursor = conn.cursor()
    cursor.execute(sql)
    conn.commit()
    conn.close()

if __name__ == '__main__':
    #main()
    #init_db("textmov.db")
    print("爬取成功！")


